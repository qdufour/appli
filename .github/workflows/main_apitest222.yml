# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions



# Python on Linux Web App
# Build a Python project (using Django/Flask/Bottle frameworks) and deploy it to Azure as a Linux web app.
name: Deploy Python package to Azure Web App as a Linux web app.
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: test     # set this to your application's name
  WORKING_DIRECTORY: '.'        # set this to the path to your path of working directory inside github repository, defaults to the repository root
  PYTHON_VERSION: '3.11'        # set the version to use
  STARTUP_COMMAND: ''           # set this to the startup command required to start the gunicorn server. default it is empty


name: Build and deploy Python app
jobs:
 build-and-deploy:
  runs-on: ubuntu-latest
  environment: dev
  steps:

  # checkout the repo 
  - uses: actions/checkout@v3

  # setup python
  - name: Setup Python
    uses: actions/setup-python@v1
    with:
     python-version: ${{ env.PYTHON_VERSION }}

  # install dependencies
  - name: python install
    working-directory: ${{ env.WORKING_DIRECTORY }}
    run: |
     sudo apt install python${{ env.PYTHON_VERSION }}-venv
     python -m venv --copies antenv
     source antenv/bin/activate
     pip install setuptools
     pip install -r requirements.txt

  # deploy web app
  - uses: azure/webapps-deploy@v2
    with:
     app-name: ${{ env.AZURE_WEBAPP_NAME }}
     package: ${{ env.WORKING_DIRECTORY }}
     startup-command: ${{ env.STARTUP_COMMAND }}




"""name: Build and deploy Python app to Azure Web App - apitest222
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Unzip data
        run: unzip data1.zip -d data1

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'apitest222'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E5D7BFDE16F54B4687C10258B81C338B }}

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      - name: 'Run Flask API'
        run: |
          python api.py   # Adjust the sleep duration based on your application's startup time

      - name: 'Run Streamlit app'
        run: |
          streamlit run app.py"""
